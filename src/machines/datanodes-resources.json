{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Base uri of resources"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username used when provisioning virtual machines"
            }
        },
        "password": {
            "type": "object",
            "metadata": {
                "description": "Admin password used when provisioning virtual machines"
            }
        },
        "storageSettings": {
            "type": "object",
            "metadata": {
                "description": "Storage Account Settings"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location where resources will be provisioned"
            }
        },
        "influxTags": {
            "type": "object",
            "defaultValue": {
                "provider": "influxdata"
            },
            "metadata": {
                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
            }
        },
        "subnet": {
            "type": "object",
            "metadata": {
                "description": "The name of the subnet to deploy resources into"
            }
        },
        "dataNodesIpPrefix": {
            "type": "string",
            "metadata": {
                "description": "IP Prefix used to append index for static addresses"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata": {
                "description": "Size of the InfluxEnterprise data nodes"
            }
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of InfluxEnterpirse data nodes"
            }
        },
        "osSettings": {
            "type": "object",
            "metadata": {
                "description": "OS settings to deploy on"
            }
        },
        "namespace": {
            "type": "string",
            "metadata": {
                "description": "The namespace for resources created by this template"
            }
        },
        "lbBackendPools": {
            "type": "object",
            "metadata": {
                "description": "loadBalancerBackendAddressPools config object"
            }
        }
    },
    "variables": {
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('subnet').vnet, parameters('subnet').name)]"
    },
    "resources": [
        {
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat('avail-', parameters('namespace'))]",
            "location": "[parameters('location')]",
            "properties": {
                "platformUpdateDomainCount": 20,
                "platformFaultDomainCount": 3
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('nic-', copyindex(), '-vm', parameters('namespace'), '-', copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat('dataNodeNic','nicLoop')]",
                "count": "[parameters('vmCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(parameters('dataNodesIpPrefix'),copyindex())]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": "[parameters('lbBackendPools').backendPools]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat('osProfileData', copyindex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-08-01",
            "copy": {
                "name": "osProfileLoop",
                "count": "[parameters('vmCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('partials/osProfile-resources.json',parameters('_artifactsLocationSasToken'))) ]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUserName": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "password": {
                        "value": "[parameters('password')]"
                    },
                    "computerName": {
                        "value": "[concat('vm', parameters('namespace'), '-', copyindex())]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('vm', parameters('namespace'), '-', copyindex())]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('influxTags').provider)]"
            },
            "plan": {
                "name": "data",
                "product": "influxdb-enterprise-vm",
                "publisher": "influxdata"
            },
            "copy": {
                "name": "[concat(parameters('namespace'), 'virtualMachineLoop')]",
                "count": "[parameters('vmCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', 'nic-', copyindex(), '-vm', parameters('namespace'), '-', copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', 'avail-', parameters('namespace'))]",
                "[concat('Microsoft.Resources/deployments/', 'osProfileData', copyindex())]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('avail-', parameters('namespace')))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": "[reference('Microsoft.Resources/deployments/osProfileData', copyindex(), '2019-05-01').outputs.osProfile.value]",
                "storageProfile": {
                    "imageReference": {
                        "publisher": "influxdata",
                        "offer": "influxdb-enterprise-vm",
                        "sku": "data",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat('vm', parameters('namespace'), '-', copyindex(), '-osdisk')]",
                        "createOption": "FromImage",
                        "diskSizeGB": 32,
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "diskSizeGB": "[parameters('storageSettings').diskSize]",
                            "name": "[concat('vm', parameters('namespace'), '-', copyindex(), '-datadisk')]",
                            "caching": "None",
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', copyindex(), '-vm', parameters('namespace'), '-', copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat('vm', parameters('namespace'), '-', copyindex(), '/configureDatanode', copyindex())]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', 'vm', parameters('namespace'), '-', copyindex())]"
                    ],
                    "properties": "[parameters('osSettings').extensionSettings.data]"
                }
            ]
        }
    ],
    "outputs": {}
}